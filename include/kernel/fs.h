////////////////////////////////////////////////////////////////////////////////
// $Id: fs.h,v 1.3 2010/12/18 02:06:00 Ecco Exp $
//
// Author: Joshua Bussdieker
// E-Mail: jbussdieker@gmail.com
// Description: 
////////////////////////////////////////////////////////////////////////////////
#ifndef _FS_H
#define _FS_H

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <dirent.h>
#include <stddef.h>
#include <stdio.h>

////////////////////////////////////////////////////////////////////////////////
// Defines
////////////////////////////////////////////////////////////////////////////////
#define FS_FLAG_DIRECTORY	0x10
//#define FS_FLAG_NORMAL		0x20
#define FS_TYPE_RAMFS 0
#define FS_TYPE_DEV   1

////////////////////////////////////////////////////////////////////////////////
// Structures
////////////////////////////////////////////////////////////////////////////////
typedef struct fs_node_t
{
	struct fs_node_t *	(*open)(struct fs_node_t *, const char *);
	unsigned int 		(*read)(void *, void *, size_t);
	struct dirent *		(*readdir)(void *);
	unsigned int 		(*write)(void *, void *, size_t);
	int 				(*seek)(void *, int);
	int 				(*close)(void *);

	struct fs_node_t *parent;
	struct fs_node_t *first_child;

	struct fs_node_t *next;
	struct fs_node_t *prev;
	
	struct dirent dir;

	char name[128];
	int blocksize;
	int flags;
	int type;
	struct fs_node_t *ptr;
} fs_node_t;

////////////////////////////////////////////////////////////////////////////////
// Variables
////////////////////////////////////////////////////////////////////////////////
extern fs_node_t *fsroot;
extern fs_node_t *devroot;

////////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////////
fs_node_t *		fs_open(fs_node_t *fd, const char *filename);
unsigned int	fs_read(fs_node_t *fd, void *buf, size_t size);
struct dirent *	fs_readdir(fs_node_t *fd);
unsigned int	fs_write(fs_node_t *fd, void *buf, size_t size);
int				fs_seek(fs_node_t *fd, int offset);
int				fs_close(fs_node_t *fd);

#endif
