Setting up the build enviroment
===============================
1. Cross Compiler for i586 kernel
* Download binutils from http://ftp.gnu.org/gnu/binutils/binutils-2.21.1.tar.bz2
* Download gcc-core from http://ftp.gnu.org/gnu/gcc/gcc-4.6.2/gcc-core-4.6.2.tar.gz
````
apt-get install libmpc-dev

export PREFIX=/usr/local/cross
export TARGET=i586-elf
cd /usr/src
mkdir build-binutils build-gcc

cd /usr/src/build-binutils
../binutils-2.21.1/configure --target=$TARGET --prefix=$PREFIX --disable-nls
make all
make install

cd /usr/src/build-gcc
export PATH=$PATH:$PREFIX/bin
../gcc-4.6.2/configure --target=$TARGET --prefix=$PREFIX --disable-nls --enable-languages=c --without-headers
make all-gcc
make install-gcc
````
2. Build the source code
* Download the latest version from git clone git@github.com:jbussdieker/EOS
````
cd EOS
mkdir build
make
````
The kernel is contained in build/kernel.elf
````
cd EOS/vm
sudo losetup /dev/loop0 ./kernel.img
````
This will mount the kernel floppy image so you can copy the newly compiled kernel over the old one
At this point you should be able to run the OS in VMware!
